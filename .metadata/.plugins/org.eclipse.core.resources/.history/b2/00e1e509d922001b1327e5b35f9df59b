package es.uned.sisdist.servidor;

import java.io.File;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.Map;

import es.uned.sisdist.common.Repositorio;
import es.uned.sisdist.common.ServicioDatosInterface;
import es.uned.sisdist.common.ServicioSrOperadorInterface;
import es.uned.sisdist.common.URL;

public class ServiciosSrOperadorImpl implements ServicioSrOperadorInterface {

	private ServicioDatosInterface bd;
	
	public ServiciosSrOperadorImpl() throws Exception{
		Registry registry = LocateRegistry.getRegistry(7777);
		this.bd = (ServicioDatosInterface) registry.lookup("datos_remotos");
	}
	
	@Override
	public void crearCarpeta(int id_cliente) throws RemoteException {
		Repositorio repo;
		//Obtengo la información necesaria del repositorio.
		Map<Integer,String> datos_repositorio = bd.getDatosRepositorioCliente(id_cliente);
		String nombre_repositorio = datos_repositorio.get(id_cliente);
		int id_repositorio = datos_repositorio.keySet().toArray(new Integer[1])[0];
		//No inicializo hasta que es necesario el repositorio, hasta este momento el usuario puede haber dado de alta e
		//iniciado sesion muchos repositorios pero cada objeto repositorio no se habrá inicializado hasta que un cliente lo
		//necesite.
		if(!bd.getListaRepositoriosActivos().containsKey(nombre_repositorio)) {
			repo = new Repositorio(nombre_repositorio);
			repo.setId(id_repositorio);
			bd.addRepositorioActivo(repo, nombre_repositorio);
		}
		else
			repo = bd.getRepositorioActivo(nombre_repositorio);
		//Obtengo el repositorio y creo la carpeta del usuario según el path del mismo.
		File directorio=new File(repo.getPath() + "/" + id_cliente);
		directorio.mkdir();
	}

	@Override
	public void borrarCarpeta(int id_cliente) throws RemoteException {
		
	}

	@Override
	public String bajarArchivo(URL URL) throws RemoteException {
		// TODO Auto-generated method stub
		return null;
	}

}
